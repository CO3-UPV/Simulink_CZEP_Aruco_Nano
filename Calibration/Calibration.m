% Auto-generated by cameraCalibrator app on 06-Jul-2023
%-------------------------------------------------------


% Define images to process
imageFileNames = {'Image1.png',...
    'Image3.png',...
    'Image4.png',...
    'Image5.png',...
    'Image6.png',...
    'Image7.png',...
    'Image8.png',...
    'Image10.png',...
    'Image11.png',...
    'Image14.png',...
    'Image15.png',...
    'Image16.png',...
    'Image17.png',...
    'Image18.png',...
    'Image19.png',...
    'Image21.png',...
    'Image22.png',...
    'Image23.png',...
    'Image24.png',...
    'Image25.png',...
    'Image26.png',...
    'Image27.png',...
    'Image28.png',...
    'Image29.png',...
    'Image30.png',...
    'Image31.png',...
    'Image32.png',...
    'Image33.png',...
    'Image34.png',...
    'Image35.png',...
    'Image36.png',...
    'Image37.png',...
    'Image38.png',...
    'Image40.png',...
    'Image41.png',...
    'Image42.png',...
    'Image44.png',...
    'Image45.png',...
    'Image47.png',...
    'Image50.png',...
    'Image51.png',...
    'Image52.png',...
    'Image53.png',...
    'Image54.png',...
    'Image56.png',...
    'Image58.png',...
    'Image61.png',...
    'Image62.png',...
    'Image63.png',...
    'Image64.png',...
    'Image65.png',...
    'Image66.png',...
    'Image67.png',...
    'Image69.png',...
    'Image70.png',...
    'Image71.png',...
    'Image72.png',...
    'Image73.png',...
    'Image74.png',...
    'Image75.png',...
    'Image78.png',...
    'Image79.png',...
    'Image80.png',...
    'Image83.png',...
    'Image86.png',...
    'Image87.png',...
    'Image89.png',...
    'Image91.png',...
    'Image92.png',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 2.325000e+01;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
